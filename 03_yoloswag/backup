
import java.util.*;
import java.io.*;


public class NQueens{
    //constants for the class
    //terminal specific character to clear screen , or hide/show cursor
    final static String clear =  "\033[2J";
    final static String hide =  "\033[?25l";
    final static String show =  "\033[?25h";

    //instance variable
    private boolean[][]board;
    private int[][] location;

    //terminal specific character to move the cursor
    private String go(int x,int y){
	return ("\033[" + x + ";" + y + "H");
    }
 
    public void wait(int millis){
	try {
	    Thread.sleep(millis);
	}
	catch (InterruptedException e) {
	}
    }

    public String toString(){
	String ans = "";
	for(int y=0;y<board[0].length;y++){
	    for(int x=0;x<board.length;x++){
		if(board[x][y]){
		    ans+="Q ";
		}else{
		    ans+="# ";
		}
	    }
	    ans+="\n";
	}
	ans+="\n";
	for(int y=0;y<location[0].length;y++){
	    for(int x=0;x<location.length;x++){
		ans+=" "+location[x][y];
	    }
	    ans+="\n";
	}
	

	return hide + clear + go(0,0) + ans + "\n" + show;
    }

    public NQueens(int size){
	board = new boolean[size][size];
	location = new int[size][2];
    }

    

    public boolean solve(){
	return solve(0,0,0);
    }


    public boolean solve(int startx, int starty){
	return solve(startx,starty,0);
    }

    public boolean isvalid(int x,int y,int cmn){
	for(int i=0;i<cmn;i++){
	    int x1 = location[i][0];
	    int y1 = location[i][1];
	    //boolean good = true;
	    if(x1 == x){
		//good = false;
		return false;
	    }
	    if(y1 == y){
		//
		//good = false;
		System.out.println("OMIGODWHY");

		return false;
	    }
	    //System.out.println(x1);
	    //System.out.println(y1);
	    if(Math.abs(y-y1) == Math.abs(x-x1)){
		//good = false;
		return false;
	    }
	   
	}
	return true;	
    }
		
    public boolean solve(int x,int y,int cmn){
	//	System.out.println(cmn);

	//legal move check case
	//	board[x][y] = true;
	
	/*	for(int i=0;i<cmn-1;i++){
	    int x1 = location[i][0];
	    int y1 = location[i][0];
	    boolean good = true;
	    if(x1 == x){
		good = false;
	    }
	    if(y1 == y){
		//System.out.println("OMIGODWHY");
		good = false;

	    }
	    //System.out.println(x1);
	    //System.out.println(y1);
	    if(Math.abs(y-y1) == Math.abs(x-x1)){
		//System.out.println(Math.abs((y-y1)/(x-x1)));
		//System.out.println("OMIGODWHY");
		good = false;
			
	    }
	    if(!good){
		return solve(x,y+1,cmn);
	    }
	}*/
	//	System.out.println("MAH DICK");

	System.out.println(this);
	board[x][y] = true;
	wait(400);
	if(x==board.length){
	    return true;
	}
	if(isvalid(x,y,cmn)){
	    location[cmn][0] = x;
	    location[cmn][1] = y;
	    return solve(x+1,y,cmn+1);

	}
	
	if(y>board[0].length){
	    return false;
	}
	board[x][y] = false;
			      
	
	//solved case
	/*	//move check case
		boolean solvable = false;
		for(int i=0;i<board.length;i++){
		if(solve(x,i,cmn)){
		solvable = true;
		}

		}*/
	/*try{
	    if(solve(x+1,y,cmn+1)){
		//		System.out.println("ITS VURKING");

		return true;//solve(x+1,0,cmn+1);
	    
	    }else{
		board[x][y] = false;
		return solve(x,y+1,cmn);
	    }
	}catch(IndexOutOfBoundsException e){
	    return false;
	    }*/
	
	return false;
    }

    public static void main(String[]args){
	NQueens puzzle = new NQueens(4);
	System.out.println(puzzle.solve());
	//	System.out.println(puzzle);
    }
}
